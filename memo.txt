---------------------------------------------------------------------------------------------------------------------------
폴더 구조
android: 안드로이드 네이티브 폴더
ios: ios 네이티브 폴더
node_modules: 노드 라이브러리
app.json: name은 앱 컴포넌트 이름이니 함부로 바꾸면 안 됨, 이거 바꾸면 네이티브 컴포넌트 이름도 다 바꿔야함, displayName은 앱 이름 변경용
ios/FoodDeliveryApp/AppDelegate.m 의 moduleName
android/app/src/main/java/com/fooddeliveryapp/MainActivity.java 의 getMainComponentName
babel.config.js: 바벨 설정
index.js: 메인 파일
App.tsx: 기본 App 컴포넌트
metro.config.js: 메트로 설정 파일(웹팩 대신 사용)
tsconfig.json: 타입스크립트 설정
android/app/src/main/java/com/fooddeliveryapp/MainActivity.java: 안드로이드 액티비티에서 js엔진 통해 리액트 코드 실행 + bridge로 소통
---------------------------------------------------------------------------------------------------------------------------
디버깅
1. 기본적으로 크롭으로 쓰는법 : 이거 근데 네트워크 상태 안보여서 별로
2. 플리퍼 : 연동이 어렵다 이거 나중에 공부 좀 해봐야겠다
    공홈에서 설치하고 setup doctor에서 openSsl installed 체크 되어있는지 확인하고 난 후에
        플러그인 설치
        npm i react-native-flipper redux-flipper rn-async-storage-flipper @react-native-async-storage/async-storage --force
        npx pod-install
    겁나 어렵다
---------------------------------------------------------------------------------------------------------------------------
앱 네임 변경하는 법
1. app.json의 displayName를 변경 (이거 바꾼다고 바뀌지 않음, 이거부터 바꾸는거지)
2. \android\app\src\main\res\values\strings.xml애서 이름 변경 (안드로이드)
3. \ios\프로젝트이름\Info.plist의 CFBundleDisplayName를 변경 !! string이 아니라 key를 수정해야한다 !! 제발 이거 좀 읽어줘 key key key
---------------------------------------------------------------------------------------------------------------------------
페이지 설정 (네비게이션)
npm install @react-navigation/native
npm install @react-navigation/native-stack
npm install react-native-screens react-native-safe-area-context

안드로이드 쪽에서 (android/app/src/main/java/<your package name>/MainActivity.java)
@Override
protected void onCreate(Bundle savedInstanceState) {
  super.onCreate(null);
}

android/build.gradle에서
buildscript {
    ext {
        ...
        kotlin_version = '1.6.10'
    }
    ...
    dependencies {
        ...
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
    ...
}

이거 써야된다

나는 ios전용으로 하니까 생략-

cd ios / pod install

공식문서 가면 다 나와 있다
---------------------------------------------------------------------------------------------------------------------------
하단 탭 메뉴 만들기
npm install @react-navigation/bottom-tabs

이걸 스택이랑 잘 섞어쓰면 된다
---------------------------------------------------------------------------------------------------------------------------
백엔드 연결
현재 로컬에 백엔드 파일의 경로
/Users/jeon-yul/react_workspace/food-delivery-app-master/back

터미널에서 저 위치로 이동 후에 npm i -> npm start 하면 실행됨 (터미널 닫기 ㄴㄴ)

---------------------------------------------------------------------------------------------------------------------------
리덕스
npm i @reduxjs/toolkit react-redux redux-flipper

리덕스 툴 킷은 단위가 슬라이스
슬라이스들이 모여서 리듀서가 되고 그걸 묶어서 스토어가 된다 그 스토어를 앱에서 프로바이더로 감싼다
세팅 끝

useSelector 쓰려면 provider 안에서만 쓸 수 있다

store -> root reducer(state) -> user slice, orderslice
state.user.email
state.order

! 중요
action : state를 바꾸는 동작
dispatch : 그 액션을 실제 실행하는 함수
reducer : 액션이 실제로 실행되면 state를 바꾸는 로직

---------------------------------------------------------------------------------------------------------------------------
백엔드와 연동
npm i axios : 요즘은 ky나 got로 넘어가는 추세라네

아 axios.post(서버주소, 데이터, 옵션(예를 들면 헤더))
---------------------------------------------------------------------------------------------------------------------------
회원가입 로그인 플로우
npm install react-native-encrypted-storage : 스토리지

---------------------------------------------------------------------------------------------------------------------------
분기처리
개발 환경일 (__DEV__)때는 서버가 여기 서비스 환경이면 서버가 저기
삼항 연산자 치면 안되나..? : 그래도 되는다 귀찮으니까 라이브러리 쓴다
npm i react-native-config
.env 생성 : 여기에 서버 주소

안드로이드는 http 요청에서 에러가 뜰 수 있다 그럴 때 : manifest 파일에서 어플리케이션 태그안에
android:usesCleartextTraffic="true"
입력

.env에 키=값 저장해서(예를 들어 abc=def) Config.abc로 꺼내 씀 .env

아니 근데 https 써야되는거 아닌가

-Android에서 Config가 적용이 안 되면 다음 추가해야함

android/app/proguard-rules.pro에서
-keep class com.fooddeliveryapp.BuildConfig { *; }

android/app/build.gradle에서
apply plugin: "com.android.application"
apply from: project(':react-native-config').projectDir.getPath() + "/dotenv.gradle"
...
    defaultConfig {
        ...
        resValue "string", "build_config_package", "com.fooddeliveryapp"
    }

---------------------------------------------------------------------------------------------------------------------------
로그인을 하면 서버에서 토큰이라는걸 보내준다
asyncStorage라는 곳에 정보를 저장 근데 이건 암호화가 안된다 : 보안에 민감하지 않은것을 저장해야함
그래서 나온것이 EncryptedStorage : 보안에 민감하다면 EncryptedStorage에 저장 하여야 한다

EncryptedStorage : npm i react-native-encrypted-storage
asyncStorage : npm install @react-native-async-storage/async-storage

redux에 넣은 데이터는 앱을 끄면 날아감
앱을 꺼도 저장되어야 하고 민감한 값은 encrypted-storage에
개발 환경별로 달라지는 값은 react-native-config에 저장하면 좋음(암호화 안 됨)
그 외에 유지만 되면 데이터들은 async-storage에 저장(npm install @react-native-async-storage/async-storage)

accessToken에는 유저의 정보가 있는데 유효기간이 있다
이 기간이 지나면 refreshToken을 서버로 보내면 새로운 accessToken을 새로 발급해준다


EncryptedStorage 사용법
    promise여서 await 붙여서 써야함
    setItem : 저장
    getItem : 가져오기
await EncryptedStorage.setItem('키', '값');
await EncryptedStorage.removeItem('키');
const 값 = await EncryptedStorage.getItem('키');
---------------------------------------------------------------------------------------------------------------------------
웹소켓 : 양방향 통신
npm i socket.io-client

     첫번째 프롭스 : 서버주소
     두번째 프롭스 : 옵션

     io(서버주소,{
     transports : ['websoket'],
     path : '/socket-io'
     })

     socket = io(Config.API_URL, {
      // transports: ['websocket'], : 롱 폴링 기법을 빼버림
      // long-polling : 서버에게 새로운 데이터가 있는지 실시간으로 확인하도록 요청하는것 : 굉장히 비 효율적이다
      transports: ['websocket'],
    });

    !! 클라이언트와 서버는 한 번만 연결되면 된다 custom hook을 만들어서 가져와서 쓸 때 만얃 3번 가져오면 3번 연결이 되고 응답도 3번 받는다
    이런 비효율을 막기 위한 코드를 useSoket에 써두었다

    socket.emit : 서버에게 데이터를 보내는 것
    socket.on : 서버에게 데이터를 받는 것

    socket는 키 값 형태로 되어있다

    // emit일때
    // 서버에게 acceptOrder라는 키로 hello라는 데이터를 보내겠다
    // 아니 근데 이걸 왜 써야하는거지; /AppInner에서...
    
    // on 일때
    // 'order' , {orderId:1,price : 9000, latitude:37.5, longitude:127.5 }
    // 서버가 order라는 key로 클라이언트에게 {orderId:1,price : 9000, latitude:37.5, longitude:127.5 } 값을 줌
    // 서버로 부터 데이터 받을때는 콜백 방식으로 받아야됨
---------------------------------------------------------------------------------------------------------------------------
로그인 유지
토큰을 배웠잖아? 이걸 응요하는거다
EncryptedStorage에 리프레시 토큰이 남아있잖아 그걸 서버로 보내는거지
리프레시토큰을 서버로 보내서 검증을 하고 (유효기간 등) 통과하면 로그인이 되는 로직을 바로 실행하도록 하는거지


---------------------------------------------------------------------------------------------------------------------------
네이버 지도
npm i react-native-nmap --force

ios는 git lfs를 써야됨
brew install git-lfs

설정 잡는거 겁나 어렵네;;
---------------------------------------------------------------------------------------------------------------------------
권한 얻기
npm i react-native-permissions

ios/Podfile

permissions_path = '../node_modules/react-native-permissions/ios'
pod 'Permission-Camera', :path => "#{permissions_path}/Camera"
pod 'Permission-LocationAccuracy', :path => "#{permissions_path}/LocationAccuracy"
pod 'Permission-LocationAlways', :path => "#{permissions_path}/LocationAlways"
pod 'Permission-LocationWhenInUse', :path => "#{permissions_path}/LocationWhenInUse"
pod 'Permission-Notifications', :path => "#{permissions_path}/Notifications"
pod 'Permission-PhotoLibrary', :path => "#{permissions_path}/PhotoLibrary"

info.plist
<string>배송완료 사진 촬영을 위해 카메라 권한이 필요합니다.</string>
<key>NSLocationAlwaysAndWhenInUseUsageDescription</key>
<string>배송중 위치 확인을 위해서 위치 권한이 필요합니다.</string>
<key>NSLocationAlwaysUsageDescription</key>
<string>배송중 위치 확인을 위해서 위치 권한이 필요합니다.</string>
<key>NSLocationWhenInUseUsageDescription</key>
<string>배송중 위치 확인을 위해서 위치 권한이 필요합니다.</string>
<key>NSMotionUsageDescription</key>
<string>배송중 위치 확인을 위해서 위치 권한이 필요합니다.</string>
<key>NSPhotoLibraryAddUsageDescription</key>
<string>배송완료 사진 선택을 위해 라이브러리 접근 권한이 필요합니다.</string>
<key>NSPhotoLibraryUsageDescription</key>
<string>배송완료 사진 선택을 위해 라이브러리 접근 권한이 필요합니다.</string>

<false/>밑에
	<key>NMFClientId</key>
	<string>9rpgkvbaic</string>	
---------------------------------------------------------------------------------------------------------------------------
내 위치가져오기
npm i @react-native-community/geolocation

Geolocation.getCurrentPosition(
      info => {
        setMyPosition({
          latitude: info.coords.latitude,
          longitude: info.coords.longitude,
        });
      },
      console.error,
      {
        enableHighAccuracy: true,
        timeout: 20000,
      },
    );


---------------------------------------------------------------------------------------------------------------------------
이미지 선택 후 리사이징
npm i react-native-image-crop-picker
npm i react-native-image-resizer
리사이즈 안하면 용량 너무 커서 서버 터질 수도 있다 그러니까 프론트에서 해줘야함

아 이거 겁나 어렵네..
complete component에 코드 있음

---------------------------------------------------------------------------------------------------------------------------
이미지 업로드
{uri : '' filename:'' type: '확장자'} 
이런 형식의 파일을
multipart/form-data 통해서 업로드
---------------------------------------------------------------------------------------------------------------------------
라이브러리 패칭 : 기능 수정 추가 등등
npm i patch-package
이거 진짜 개 어렵다.. 그나마 다행인건 내가 자바를 조금 읽을 수 있다는거..
ios 는 오브젝트 씨인데 좆됐다..

node_modules에서 원하는 라이브러리에서 ios에서 src에서
(라이브러리명.h (이게 헤더)에서 네이티브모듈을 연결해준다)
라이브러리명.m (실질적으로 비지니스로직이 들어있다)에서 @"saveToPhotos":@NO 옵션 추가
후에 CFStringCompare쪽에서 NSString *moviePath = [url path]; 추가

후에 밑에
if([[self.options objectForKey:@"saveToPhotos"] boolValue]){
            if(UIVideoPathIsCompatibleWithSavedPhotosAlbum(moviePath)){
                UIVideoPathIsCompatibleWithSavedPhotosAlbum(moviePath, nil,nil,nil);
            }
        }

아니시발 이게 다 뭐야 ;;
후에 index.d.ts 에서 그 뭐냐 그 타입 지정
saveToPhotos?:boolean;

이러면 된대 시발 이걸 어케알아
근데 이렇게 하고 난 후에 npm i 하면 내가 커스텀한 모듈이 초기화 된대
그러면 어떻게 해야하냐?
    pathch-package 수정한 모듈이름
을 터미널에 치면 안 날라감

와 시발 이거 하지마
---------------------------------------------------------------------------------------------------------------------------
스플래시
npm i react-native-splash-screen

---------------------------------------------------------------------------------------------------------------------------
앱 아이콘 변경
npm i react-native-vector-icons
npm i -D @types/react-native-vector-icons

---------------------------------------------------------------------------------------------------------------------------
이미지 그리드 만들기 : 이거 유용할 듯
npm i react-native-fast-image


---------------------------------------------------------------------------------------------------------------------------
앱 출시

애플 개발자 계정 등록
https://developer.apple.com/ -> join the apple developer program에서 개발자 등록 -> enroll
이것저것 체크하고 결제 .. -> certificates, identifiers & profiles -> 아 우선 맥의 키체인에 접근
키체인 접근/인증서지원/인증기관에서 인증서요청 누르고 -> 이메일 쓰고 (애플개발자계정) -> 다운로드
-> 다시 certificates, identifiers & profiles페이지 가서 등록하기 -> 애플 디벨롭먼트 체크(개발용)
출시용은 ios distribution이다 -> 파일 선택 창에서 아까 받은 그 파일 선택 -> 다운로드
이 방식으로 배포용 하나 더 받으셈(ios distribution) -> 그럼 파일이 총 2개겠지? -> 키체인 접근해서 그 파일 두개를 드래그앤드롭
-> xcode워크스페이스 가서 앱 최상단에서 signing&capabilities 에서 team에서 내 계정, 만약 없으면 에드 어카운트해서 계정 추가해야함
-> 테스트도 마찬가지로 진행 -> 계정연결 완료
프로필 만들기 -> ㅣ홈페이지에서 프로필 추가 버튼 -> ios app development -> 앱 아덴티티 입력 -> 테스트 장치 선택 -> 뭐시기 입력 다운로드
같은 방식으로 디벨롭먼트가아니고 앱스토어 누르고 다운로드
이러면 xcode에서 자동으로 뭐가 등록됨

---------------------------------------------------------------------------------------------------------------------------
fcm ㅣ 푸시알림
npm i @react-native-firebase/analytics @react-native-firebase/app @react-native-firebase/messaging
npm i react-native-push-notification @react-native-community/push-notification-ios
npm i -D @types/react-native-push-notification

firebase 프로젝트 설정 - Admin SDK - Node.js - 새 비공개키 생성 - back 폴더 안에 넣고 app.js 소스 수정
안드로이드 앱 설정 후 google-services.json을 android/app에 넣기
[ios] 아이폰 앱 설정 후 ios/GoogleService-Info.plist 생성
배송 완료시 push 알림이 올 것임(에뮬레이터에서는 안 올 수 있음)

firebase에 앱 등록하면 뭐 파일 주는데 그거 공홈 처럼 따라하면 됨 잘나와있음
안드로이드 아이오에스 따로따로 등록해야함

세팅 다 했으면 코드 짜는데
컴포넌트 내부에 넣으면 안됨
app.tsx

notification : 이 안에 타이틀, 내용이 들어있고 채널 등도 넣을 수 있다 이걸 서버에서 클라이언트로 보내는거지


서버가 기기로 알림을 보내려면 기기 토큰이 필요
푸시알림 등록을하면 토큰을 발급해줌 -> 서버로 토큰을 보냄 -> 서버에서 토큰으로 기기를 찾아서 알림을 보냄

서버로 기기 토큰 보내는 법은 AppInner.tsx에 있음

messaging().registerDeviceForRemoteMessages(): 기기등록

테스트 할 때는 파이어베이스 페이지에서 보낼 수 있다

---------------------------------------------------------------------------------------------------------------------------
코드 푸시
안드로이드 설정
appcenter.ms에 로그인하고 add new클릭해서 new app 앱 등록할 것 (안드로이드용, 아이폰용 따로 만들어야함)-> type 설정 안해도 됨  add new app ->그럼 뭐 설명 나옴 뭐 설치하라고 하고 그런다
npm audit 어쩌구 나오는데 설치 -> npm install appcenter appcenter-analytics appcenter-crashes -> npm i react-native-code-push -> npm i -g appcenter-cli (app center 명령어를 쓰기위해)
-> 설치되는 동안 아까 웹에서 안내하는거 다 따라하셈 -> 후에 distribute에서 codepush가서 클릭하면 또 설명 나옴 뭐 설정할거 개개개개많음 -> 그 중에 strings.xml에 키를 적어야됨 -> appcenter login 후에 뭐 웹이뜬다 거기에 있는 키를 복사해서 입력한 후에
-> appcenter codepush deployment list -a zerohch0/food-delivery-app-android -k (이건 안드로이드 키 가져오는거다, ios는 android대신 ios를 써야됨)
-> 하면 키가 두개 나옴 거기서 스테이징 키를 복사해서 string.xml에 붙여넣는다 나중에 배포할때는 스테이징 말고 프로덕션으로 해야됨
: 그럼 이제 코드푸시 할 때 스테이징용 앱들한테는 코드 푸시가 됨 , 나중에 출시 할 때는 프로덕션으로 바꿔줘야 겠지? ㅇㅋ

코드푸시하는법
패키지.제이슨에 코드푸시 명령어들 넣기
    "codepush:android": "appcenter codepush release-react -a 아이디/앱이름 -d 배포이름(스테이징인지, 프로덕션인지, 프로덕션이면 키도 써야됨) --sourcemap-output --output-dir ./build -m -t 타겟버전(1.0.0)",
    "codepush:ios": "appcenter codepush release-react -a 아이디/앱이름 -d 배포이름 --sourcemap-output --output-dir ./build -m -t 타겟버전",
    "bundle:android": "react-native bundle --assets-dest build/CodePush --bundle-output build/CodePush/index.android.bundle --dev false --entry-file index.js --platform android --sourcemap-output build/CodePush/index.android.bundle.map",
    "bundle:ios": "react-native bundle --assets-dest build/CodePush --bundle-output build/CodePush/main.jsbundle --dev false --entry-file index.js --platform ios --sourcemap-output build/CodePush/main.jsbundle.map",  
    
    타겟 버전 굉장히 중요 : 1.2 이런식으로 적으면 버전이 1.2.3인 앱들은 코드푸시의 적용을 받는거지 다만 1.3.6 이런 애들은 적용을 안 받는다
    앞으로 버전을 막 올리면 코드 푸시를 못 쓰는 상황이 생긴다 : 팁을 주자면 src부분만 수정되었다? 맨 뒷버전을 올려라 그럼 코드푸시 먹히겠지
    중간 숫자 올리면 출시

    나중에 코드 수정 후 npm run codepush:android 하면 바로 배포 됨
    
사용은 어떻게하냐?
    export default CodePush(App)
끝
만약 옵션을 넣고 싶다


 useEffect(() => {
    CodePush.sync(
      {
        installMode: CodePush.InstallMode.IMMEDIATE,
        mandatoryInstallMode: CodePush.InstallMode.IMMEDIATE,
        updateDialog: {
          mandatoryUpdateMessage:
            '필수 업데이트가 있어 설치 후 앱을 재시작합니다.',
          mandatoryContinueButtonLabel: '재시작',
          optionalIgnoreButtonLabel: '나중에',
          optionalInstallButtonLabel: '재시작',
          optionalUpdateMessage: '업데이트가 있습니다. 설치하시겠습니까?',
          title: '업데이트 안내',
        },
      },
      status => {
        console.log(`Changed ${status}`);
      },
      downloadProgress => {
        // 여기서 몇 % 다운로드되었는지 체크 가능
      },
    ).then(status => {
      console.log(`CodePush ${status}`);
    });
  }, []);


const codePushOptions: CodePushOptions = {
  checkFrequency: CodePush.CheckFrequency.MANUAL,
  // 언제 업데이트를 체크하고 반영할지를 정한다.
  // ON_APP_RESUME은 Background에서 Foreground로 오는 것을 의미
  // ON_APP_START은 앱이 실행되는(켜지는) 순간을 의미

  installMode: CodePush.InstallMode.IMMEDIATE,
  mandatoryInstallMode: CodePush.InstallMode.IMMEDIATE,
  // 업데이트를 어떻게 설치할 것인지 (IMMEDIATE는 강제설치를 의미)
};

    export default CodePush(CodePushOption)(App)

히스토리는 앱센터 웹에 distribute의 codepush에 있다


ios 설정
npm i react-native-code-push -> AppDelegate.m -> #import <CodePush/CodePush.h> -> 아 뭐 되게 많음
-> info.plist가서 키 추가(이것도 상황따라 어떤키인지 다르겠지) -> 앱센터에서 안드로이드 만든것처럼 아이폰용 앱 만든다 -> 하라는 대로 한다
-> xcode에서 프로젝트 우클릭 -> add file to '프로젝트 명' 해서 앱센터컨피스피리스트 선택 추가 할 것 -> vuild pahases에 카피어쩌구에 앱센터와 구글서비스 피리스트 있어야됨
-> 



---------------------------------------------------------------------------------------------------------------------------

앱 출시
리네 프로젝트는 앱 용량이 개 크다 -> 헤르메스라는 애들 적용하면 좀 작아진다 -> 이거 리네 공홈에 있다 설정하면됨

ios 앱 출시
testFlight : 출시 전 테스팅
appstoreconnect.apple.com에 개발자용 계정 로그인 앱 추가 고유한 값 넣어주고-> 앱 추가-> xcode에서 기종을 any IOS device로 체크 후에 아카이브 해주면 됨 (프로덕트 메뉴에 있음)
-> distribute app 클릭 이거 끝나면 알아서 등록이 되나보다 -> 이거 하고 빌드에서 앱 누르고 심사 요청 보내면 됨 결과는 며칠 뒤 나옴

android 앱 출시용은
apk , aad 만들어야된다고? ㅇㅋ 어떻게...?




---------------------------------------------------------------------------------------------------------------------------

etc

axios에서 반복되는 작업(예를 들어 토큰 만료 시 재발급 받는 코드)은 인터셉터라는 기능을 쓴다
무슨 기능이냐? : 요청을 보내기 전, 보낸 후, 응답 오기 전, 응답이 온 후 등에 특정한 동작을 수행하게 할 수 있다
만약 응답이 419일 경우 재발급 받는 코드 ㄱ

응답이 오기전에 사용한다
1번째 인자 : 성공 시 함수
2번째 인자 : 실패 시 함수
axios.interceptors.response.use(
      () => {},
      () => {},
    );
이 부분 앱 이너에 구현해둠 어렵다

웹뷰를 쓰는 이유 : 앱의 경우에는 배포를 할 때 앱스토어를 거쳐서 해야하는데 웹의 경우는 실시간 반영이 된다 이러한 점 때문에 웹뷰를 쓴다

